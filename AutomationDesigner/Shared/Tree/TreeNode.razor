@using AutomationDesigner.Store.StencilSetsUserCase.Models
@using AutomationDesigner.Store.LocalizerUserCase

@inject IState<LocalizerState> state

<ul class="root">
    <li>
        <div @onclick="HandleClick">
            <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-chevron-down" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                @if (arrow == "left")
                {
                    <path fill-rule="evenodd" d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z"/>    
                } else if (arrow == "down") {
                    <path fill-rule="evenodd" d="M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z"/>
                }
            </svg>
            <span>
                @Localizer(StencilItemGroup.Name)
            </span>
        </div>
        
        <ul style="display: @(arrow=="left"?"none":"block");">
            @foreach (var item in @StencilItemGroup.StencilItems)
            {
                
                <li>
                    <img src="stencilsets/bpmn2.0/icons/@item.Icon" width="16px;" height="16px;"/>
                    @Localizer(item.Title)
                </li>
            }
            
        </ul>
    </li>
</ul>

@code {

    [Parameter] public StencilItemGroup StencilItemGroup {get;set;}


    private string Localizer(string s) => state.Value.Localizer[s];

    string arrow = "left";

    protected void HandleClick(MouseEventArgs e) 
    {
        arrow = arrow == "left"?"down":"left";
        
    }
}